// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  username String  @unique
  nickname String?
  password String
  role     Plan    @default(FREE)

  parties   Party[]
  votetimes Votetime[]
}

model Party {
  id          Int    @id @default(autoincrement())
  partyid     String @unique
  title       String
  description String

  // range of time of the party
  date       String[]
  start_time Float
  start_ampm Time     @default(AM)
  end_time   Float
  end_ampm   Time     @default(PM)

  votetimes Votetime[]

  creator User @relation(fields: [userId], references: [id])
  userId  Int

  status   Boolean   @default(false)
  decision Decision?
}

model Votetime {
  id          Int    @id @default(autoincrement())
  creatorName String

  timeslots TimeSlot[]

  creator User? @relation(fields: [userId], references: [id])
  userId  Int?

  partyAt Party  @relation(fields: [partyid], references: [partyid], onDelete: Cascade)
  partyid String
}

model TimeSlot {
  id         Int    @id @default(autoincrement())
  date       String
  start_time Float
  start_ampm Time   @default(AM)
  end_time   Float
  end_ampm   Time   @default(PM)

  votetime   Votetime @relation(fields: [votetimeId], references: [id], onDelete: Cascade)
  votetimeId Int
}

model Decision {
  id         Int    @id @default(autoincrement())
  date       String
  start_time Float
  start_ampm Time   @default(AM)
  end_time   Float
  end_ampm   Time   @default(PM)

  party   Party  @relation(fields: [partyid], references: [partyid], onDelete: Cascade)
  partyid String @unique
}

enum Plan {
  FREE
  MEMBER
}

enum Time {
  AM
  PM
}
